server:
  port: 8080

spring:
  main:
    # 一个实体类可对应两张表
    allow-bean-definition-overriding: true
  application:
    name: Sharding-Sphere-JDBC
  # sharding 多数据源配置
  shardingsphere:
    datasource:
      names: ds1
      ds1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/sharding_1?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=Asia/Shanghai
        username: root
        password: gwssi

    # 表配置
    sharding:
      tables:
        user:
          # 表名配置 user_1,user_2
          actual-data-nodes: ds1.user_$->{1..2}
          # 主键生成策略 SNOWFLAKE 雪花算法
          key-generator-column-name: id
          key-generator:
            column: id
            type: SNOWFLAKE
          # 分片策略， id偶数user_1,id奇数user_2
          table-startegy:
            inline:
              sharding-column: id
              algorithms-expression: user_$->{id % 2 + 1}
    # 显示sql
    props:
      sql:
        show: true



# 开启mybatis-plus
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
